import requests
import os
import random
import re
import json
from mutagen.mp3 import MP3
from mutagen.id3 import ID3, APIC, TIT2, TPE1
import yandex_music
from config import DOWNLOAD_DIR, YANDEX_TOKEN  # –ü—É—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏ –±–µ—Ä—ë—Ç—Å—è –∏–∑ config.py

# –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
client = yandex_music.Client(YANDEX_TOKEN).init()

def get_id_from_url(url):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Å—ã–ª–∫–∞ –ø–ª–µ–π–ª–∏—Å—Ç–æ–º –∏–ª–∏ –∞–ª—å–±–æ–º–æ–º, –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç (—Ç–∏–ø, ID)."""
    playlist_match = re.search(r'playlists/(\d+)', url)
    album_match = re.search(r'album/(\d+)', url)

    if playlist_match:
        return "playlist", playlist_match.group(1)
    elif album_match:
        return "album", album_match.group(1)
    return None, None


def download_track(track, cover_path):
    """–°–∫–∞—á–∏–≤–∞–µ—Ç —Ç—Ä–µ–∫, –æ–±–ª–æ–∂–∫—É –∏ –≤—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ."""
    track_name = f"{track.artists[0].name} - {track.title}.mp3"
    track_path = os.path.join(DOWNLOAD_DIR, track_name)

    # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞
    track.download(track_path)

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö (–æ–±–ª–æ–∂–∫–∏ –∏ —Ç–µ–≥–æ–≤)
    audio = MP3(track_path, ID3=ID3)
    try:
        audio.add_tags()
    except Exception:
        pass

    # –í—Å—Ç—Ä–∞–∏–≤–∞–Ω–∏–µ –æ–±–ª–æ–∂–∫–∏ –≤ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    audio.tags.add(
        APIC(
            encoding=3,
            mime="image/jpeg",
            type=3,
            desc="Cover",
            data=open(cover_path, "rb").read(),
        )
    )
    audio.tags.add(TIT2(encoding=3, text=track.title))
    audio.tags.add(TPE1(encoding=3, text=track.artists[0].name))
    audio.save()

    print(f"‚úÖ –¢—Ä–µ–∫ '{track_name}' —Å –æ–±–ª–æ–∂–∫–æ–π '{cover_path}' —Å–∫–∞—á–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ '{DOWNLOAD_DIR}'")
    return track_path


    # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ–±–ª–æ–∂–∫–∏
    cover_url = track.cover_uri.replace("%%", "1000x1000")
    response = requests.get(f"https://{cover_url}")
    with open(cover_path, "wb") as f:
        f.write(response.content)

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö (–æ–±–ª–æ–∂–∫–∏ –∏ —Ç–µ–≥–æ–≤)
    audio = MP3(track_path, ID3=ID3)
    try:
        audio.add_tags()
    except Exception:
        pass

    audio.tags.add(
        APIC(
            encoding=3,
            mime="image/jpeg",
            type=3,
            desc="Cover",
            data=open(cover_path, "rb").read(),
        )
    )
    audio.tags.add(TIT2(encoding=3, text=track.title))
    audio.tags.add(TPE1(encoding=3, text=track.artists[0].name))
    audio.save()

    print(f"‚úÖ –¢—Ä–µ–∫ '{track_name}' —Å–∫–∞—á–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ '{DOWNLOAD_DIR}'")
    return track_path


def get_user_preference(user_id):
    """–ß–∏—Ç–∞–µ—Ç –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Ñ–∞–π–ª–∞ user_data.json –ø–æ user_id."""
    try:
        with open("user_data.json", "r") as f:
            data = json.load(f)
            user_data = data.get(str(user_id))  # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            if user_data:
                return user_data.get("random_order", False)  # –í–µ—Ä–Ω—ë—Ç True, –µ—Å–ª–∏ –ø–æ—Ä—è–¥–æ–∫ —Å–ª—É—á–∞–π–Ω—ã–π, –∏–Ω–∞—á–µ False
            else:
                print("‚ùå –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
                return False
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª user_data.json –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return False


def download_cover(track):
    """–°–∫–∞—á–∏–≤–∞–µ—Ç –æ–±–ª–æ–∂–∫—É –¥–ª—è —Ç—Ä–µ–∫–∞."""
    cover_name = f"{track.artists[0].name} - {track.title}.jpg"
    cover_path = os.path.join(DOWNLOAD_DIR, cover_name)

    # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ–±–ª–æ–∂–∫–∏
    cover_url = track.cover_uri.replace("%%", "1000x1000")  # –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±–ª–æ–∂–∫—É —Å –Ω—É–∂–Ω—ã–º —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º
    response = requests.get(f"https://{cover_url}")
    with open(cover_path, "wb") as f:
        f.write(response.content)

    print(f"‚úÖ –û–±–ª–æ–∂–∫–∞ –¥–ª—è —Ç—Ä–µ–∫–∞ '{track.title}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ '{cover_path}'")
    return cover_path

def get_random_track(url, user_id=None):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏—Å—Ç–æ—á–Ω–∏–∫ (–ø–ª–µ–π–ª–∏—Å—Ç –∏–ª–∏ –∞–ª—å–±–æ–º), –ø–æ–ª—É—á–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –∏–ª–∏ –ø–æ –ø–æ—Ä—è–¥–∫—É —Ç—Ä–µ–∫ –∏ —Å–∫–∞—á–∏–≤–∞–µ—Ç –µ–≥–æ."""
    media_type, media_id = get_id_from_url(url)

    if media_type == "playlist":
        playlist = client.playlist(media_id)  # –ü–æ–ª—É—á–∞–µ–º –ø–ª–µ–π–ª–∏—Å—Ç –ø–æ ID
        tracks = [track.track for track in playlist.tracks]
        print(f"üéµ –í—ã–±—Ä–∞–Ω –ø–ª–µ–π–ª–∏—Å—Ç: {playlist.title}")

    elif media_type == "album":
        album = client.albums_with_tracks(media_id)
        tracks = [track for volume in album.volumes for track in volume]  # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –¥–∏—Å–∫–∏ –≤ –∞–ª—å–±–æ–º–µ
        print(f"üé∂ –í—ã–±—Ä–∞–Ω –∞–ª—å–±–æ–º: {album.title} - {album.artists[0].name}")

    else:
        print("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ç–∏–ø —Å—Å—ã–ª–∫–∏.")
        return

    # –ß—Ç–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ —Å–ª—É—á–∞–π–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ —Ç—Ä–µ–∫–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    shuffle = get_user_preference(user_id) if user_id else False  # –µ—Å–ª–∏ user_id –Ω–µ—Ç, —Ç–æ –Ω–µ —Å–ª—É—á–∞–π–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫

    if shuffle:
        # –ï—Å–ª–∏ —Å–ª—É—á–∞–π–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫
        track = random.choice(tracks)
        print(f"üîπ –í—ã–±—Ä–∞–Ω —Å–ª—É—á–∞–π–Ω—ã–π —Ç—Ä–µ–∫: {track.title} - {', '.join(artist.name for artist in track.artists)}")
    else:
        # –ï—Å–ª–∏ –ø–æ –ø–æ—Ä—è–¥–∫—É
        track = tracks[0]  # –ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π —Ç—Ä–µ–∫
        print(f"üîπ –í—ã–±—Ä–∞–Ω —Ç—Ä–µ–∫ –ø–æ –ø–æ—Ä—è–¥–∫—É: {track.title} - {', '.join(artist.name for artist in track.artists)}")

    # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –æ–±–ª–æ–∂–∫–∏
    cover_path = download_cover(track)

    # –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ç—Ä–µ–∫–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
    download_track(track, cover_path)



"""# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å user_id
user_id = 5038901733  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ user_id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
url = "https://music.yandex.ru/album/123456"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—É—é —Å—Å—ã–ª–∫—É

# –ó–∞–ø—É—Å–∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ç—Ä–µ–∫–∞
get_random_track(url, user_id)
"""